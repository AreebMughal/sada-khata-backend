[{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.controller.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.controller.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CreateUserDto } from '../user/dto/create-user.dto';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nexport declare class AuthController {\n    private readonly authService;\n    constructor(authService: AuthService);\n    register(register: CreateUserDto, hre: any): Promise<import(\"../../entities\").User>;\n    LoginAPI(loginDto: LoginDto): Promise<{\n        user: import(\"../../entities\").User;\n        access_token: string;\n    }>;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.controller.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.controller.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthController = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst create_user_dto_1 = require(\"../user/dto/create-user.dto\");\nconst auth_service_1 = require(\"./auth.service\");\nconst login_dto_1 = require(\"./dto/login.dto\");\nlet AuthController = class AuthController {\n    constructor(authService) {\n        this.authService = authService;\n    }\n    async register(register, hre) {\n        let var1;\n        if (register.username === '') {\n            var1 = 'Username is required';\n        }\n        else {\n            var1 = '';\n        }\n        console.log(var1);\n        return this.authService.signUp(register);\n    }\n    async LoginAPI(loginDto) {\n        return this.authService.login(loginDto);\n    }\n};\nexports.AuthController = AuthController;\n__decorate([\n    (0, common_1.Post)('sign-up'),\n    __param(0, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [create_user_dto_1.CreateUserDto, Object]),\n    __metadata(\"design:returntype\", Promise)\n], AuthController.prototype, \"register\", null);\n__decorate([\n    (0, common_1.Post)('login'),\n    __param(0, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [login_dto_1.LoginDto]),\n    __metadata(\"design:returntype\", Promise)\n], AuthController.prototype, \"LoginAPI\", null);\nexports.AuthController = AuthController = __decorate([\n    (0, swagger_1.ApiTags)('Auth'),\n    (0, common_1.Controller)('auth'),\n    __metadata(\"design:paramtypes\", [auth_service_1.AuthService])\n], AuthController);\n//# sourceMappingURL=auth.controller.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.module.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.module.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class AuthModule {\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.module.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.module.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst jwt_1 = require(\"@nestjs/jwt\");\nconst passport_1 = require(\"@nestjs/passport\");\nconst user_module_1 = require(\"../user/user.module\");\nconst auth_service_1 = require(\"./auth.service\");\nconst jwt_strategy_1 = require(\"./jwt-strategy/jwt.strategy\");\nconst config_1 = require(\"@nestjs/config\");\nconst auth_controller_1 = require(\"./auth.controller\");\nlet AuthModule = class AuthModule {\n};\nexports.AuthModule = AuthModule;\nexports.AuthModule = AuthModule = __decorate([\n    (0, common_1.Module)({\n        imports: [\n            user_module_1.UserModule,\n            passport_1.PassportModule.register({ defaultStrategy: 'jwt' }),\n            jwt_1.JwtModule.registerAsync({\n                imports: [config_1.ConfigModule],\n                inject: [config_1.ConfigService],\n                useFactory: (configService) => ({\n                    secret: configService.get('JWT_SECRET'),\n                    signOptions: { expiresIn: '1h' },\n                }),\n            }),\n        ],\n        providers: [auth_service_1.AuthService, jwt_1.JwtService, jwt_strategy_1.JwtStrategy],\n        controllers: [auth_controller_1.AuthController],\n        exports: [auth_service_1.AuthService]\n    })\n], AuthModule);\n//# sourceMappingURL=auth.module.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.service.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.service.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/entities';\nimport { CreateUserDto } from '../user/dto/create-user.dto';\nimport { UserService } from '../user/user.service';\nimport { LoginDto } from './dto/login.dto';\nexport declare class AuthService {\n    private userService;\n    private jwtService;\n    constructor(userService: UserService, jwtService: JwtService);\n    signUp(createUserDto: CreateUserDto): Promise<User>;\n    validateUser(username: string, password: string): Promise<User>;\n    login(loginDto: LoginDto): Promise<{\n        user: User;\n        access_token: string;\n    }>;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\auth.service.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\auth.service.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst jwt_1 = require(\"@nestjs/jwt\");\nconst bcrypt = require(\"bcryptjs\");\nconst user_service_1 = require(\"../user/user.service\");\nlet AuthService = class AuthService {\n    constructor(userService, jwtService) {\n        this.userService = userService;\n        this.jwtService = jwtService;\n    }\n    async signUp(createUserDto) {\n        const { password } = createUserDto;\n        const salt = bcrypt.genSaltSync(10);\n        const hashedPassword = bcrypt.hashSync(password, salt);\n        return this.userService.createUser({ ...createUserDto, password: hashedPassword });\n    }\n    async validateUser(username, password) {\n        const user = await this.userService.findOneBy({ username });\n        if (!user) {\n            console.log('User not found');\n            return null;\n        }\n        const isPasswordValid = bcrypt.compareSync(password, user.password);\n        if (isPasswordValid) {\n            return user;\n        }\n        else {\n            console.log('Invalid password');\n            return null;\n        }\n    }\n    async login(loginDto) {\n        const { username, password } = loginDto;\n        const user = await this.validateUser(username, password);\n        if (!user) {\n            throw new common_1.UnauthorizedException('Invalid credentials');\n        }\n        const payload = { username: user.username, sub: user.id };\n        return {\n            user,\n            access_token: await this.jwtService.signAsync(payload, { secret: process.env.JWT_SECRET }),\n        };\n    }\n};\nexports.AuthService = AuthService;\nexports.AuthService = AuthService = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [user_service_1.UserService,\n        jwt_1.JwtService])\n], AuthService);\n//# sourceMappingURL=auth.service.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\dto\\login.dto.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\dto\\login.dto.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class LoginDto {\n    username: string;\n    password: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\dto\\login.dto.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\dto\\login.dto.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoginDto = void 0;\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst class_validator_1 = require(\"class-validator\");\nclass LoginDto {\n}\nexports.LoginDto = LoginDto;\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], LoginDto.prototype, \"username\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], LoginDto.prototype, \"password\", void 0);\n//# sourceMappingURL=login.dto.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\dto\\register.dto.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\dto\\register.dto.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class RegisterDto {\n    username: string;\n    password: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\dto\\register.dto.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\dto\\register.dto.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterDto = void 0;\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst class_validator_1 = require(\"class-validator\");\nclass RegisterDto {\n}\nexports.RegisterDto = RegisterDto;\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], RegisterDto.prototype, \"username\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], RegisterDto.prototype, \"password\", void 0);\n//# sourceMappingURL=register.dto.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\jwt-strategy\\jwt.strategy.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\jwt-strategy\\jwt.strategy.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ConfigService } from '@nestjs/config';\nimport { Strategy } from 'passport-jwt';\nimport { UserService } from 'src/api/user/user.service';\nimport { IJwtPayload } from 'src/interfaces/jwt.interface';\ndeclare const JwtStrategy_base: new (...args: any[]) => Strategy;\nexport declare class JwtStrategy extends JwtStrategy_base {\n    private configService;\n    private userService;\n    constructor(configService: ConfigService, userService: UserService);\n    validate(payload: IJwtPayload): Promise<import(\"../../../entities\").User>;\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\auth\\jwt-strategy\\jwt.strategy.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\auth\\jwt-strategy\\jwt.strategy.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JwtStrategy = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nconst passport_1 = require(\"@nestjs/passport\");\nconst passport_jwt_1 = require(\"passport-jwt\");\nconst user_service_1 = require(\"../../user/user.service\");\nlet JwtStrategy = class JwtStrategy extends (0, passport_1.PassportStrategy)(passport_jwt_1.Strategy) {\n    constructor(configService, userService) {\n        super({\n            jwtFromRequest: passport_jwt_1.ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get('JWT_SECRET'),\n            passReqToCallback: true\n        });\n        this.configService = configService;\n        this.userService = userService;\n    }\n    async validate(payload) {\n        const { username } = payload;\n        const user = await this.userService.findOneBy({ username });\n        if (!user) {\n            throw new common_1.UnauthorizedException();\n        }\n        return user;\n    }\n};\nexports.JwtStrategy = JwtStrategy;\nexports.JwtStrategy = JwtStrategy = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [config_1.ConfigService,\n        user_service_1.UserService])\n], JwtStrategy);\n//# sourceMappingURL=jwt.strategy.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\change-password.dto.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\change-password.dto.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class ChangePasswordDto {\n    oldPassword: string;\n    newPassword: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\change-password.dto.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\change-password.dto.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangePasswordDto = void 0;\nconst class_validator_1 = require(\"class-validator\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nclass ChangePasswordDto {\n}\nexports.ChangePasswordDto = ChangePasswordDto;\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], ChangePasswordDto.prototype, \"oldPassword\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)(),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], ChangePasswordDto.prototype, \"newPassword\", void 0);\n//# sourceMappingURL=change-password.dto.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\create-user.dto.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\create-user.dto.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class CreateUserDto {\n    firstName: string;\n    lastName: string;\n    username: string;\n    password: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\create-user.dto.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\create-user.dto.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateUserDto = void 0;\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst class_validator_1 = require(\"class-validator\");\nclass CreateUserDto {\n}\nexports.CreateUserDto = CreateUserDto;\n__decorate([\n    (0, swagger_1.ApiProperty)({\n        example: 'John Doe',\n        description: 'The first name of the user',\n    }),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], CreateUserDto.prototype, \"firstName\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)({\n        example: 'John Doe',\n        description: 'The first name of the user',\n    }),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsOptional)(),\n    __metadata(\"design:type\", String)\n], CreateUserDto.prototype, \"lastName\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)({ example: 'abc1122' }),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], CreateUserDto.prototype, \"username\", void 0);\n__decorate([\n    (0, swagger_1.ApiProperty)({ example: '****' }),\n    (0, class_validator_1.IsString)(),\n    (0, class_validator_1.IsStrongPassword)(),\n    (0, class_validator_1.IsNotEmpty)(),\n    __metadata(\"design:type\", String)\n], CreateUserDto.prototype, \"password\", void 0);\n//# sourceMappingURL=create-user.dto.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\update-user.dto.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\update-user.dto.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CreateUserDto } from './create-user.dto';\ndeclare const UpdateUserDto_base: import(\"@nestjs/common\").Type<Partial<CreateUserDto>>;\nexport declare class UpdateUserDto extends UpdateUserDto_base {\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\dto\\update-user.dto.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\dto\\update-user.dto.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateUserDto = void 0;\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst create_user_dto_1 = require(\"./create-user.dto\");\nclass UpdateUserDto extends (0, swagger_1.PartialType)(create_user_dto_1.CreateUserDto) {\n}\nexports.UpdateUserDto = UpdateUserDto;\n//# sourceMappingURL=update-user.dto.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.controller.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.controller.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nexport declare class UserController {\n    private readonly userService;\n    constructor(userService: UserService);\n    createUser(createUserDto: CreateUserDto): Promise<import(\"../../entities\").User>;\n    updateUser(id: string, updateUserDto: UpdateUserDto): Promise<import(\"../../entities\").User>;\n    deleteUser(id: string): Promise<void>;\n    changePassword(id: string, changePasswordDto: ChangePasswordDto): Promise<void>;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.controller.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.controller.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserController = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst user_service_1 = require(\"./user.service\");\nconst create_user_dto_1 = require(\"./dto/create-user.dto\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst update_user_dto_1 = require(\"./dto/update-user.dto\");\nconst change_password_dto_1 = require(\"./dto/change-password.dto\");\nconst jwt_auth_guard_1 = require(\"../../guards/jwt-auth.guard\");\nconst roles_guard_1 = require(\"../../guards/roles.guard\");\nconst roles_decorator_1 = require(\"../../decorators/roles.decorator\");\nconst user_enum_1 = require(\"../../constants/user.enum\");\nlet UserController = class UserController {\n    constructor(userService) {\n        this.userService = userService;\n    }\n    async createUser(createUserDto) {\n        return this.userService.createUser(createUserDto);\n    }\n    async updateUser(id, updateUserDto) {\n        return this.userService.updateUser(id, updateUserDto);\n    }\n    async deleteUser(id) {\n        return this.userService.deleteUser(id);\n    }\n    async changePassword(id, changePasswordDto) {\n        return this.userService.changePassword(id, changePasswordDto);\n    }\n};\nexports.UserController = UserController;\n__decorate([\n    (0, common_1.Post)(),\n    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),\n    (0, roles_decorator_1.Roles)(user_enum_1.ROLE_TYPE.SUPER_ADMIN),\n    (0, swagger_1.ApiOperation)({ summary: 'Create a new user' }),\n    (0, swagger_1.ApiResponse)({ status: 201, description: 'User created successfully.' }),\n    __param(0, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [create_user_dto_1.CreateUserDto]),\n    __metadata(\"design:returntype\", Promise)\n], UserController.prototype, \"createUser\", null);\n__decorate([\n    (0, common_1.Put)(':id'),\n    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),\n    (0, roles_decorator_1.Roles)(user_enum_1.ROLE_TYPE.SUPER_ADMIN, user_enum_1.ROLE_TYPE.USER),\n    (0, swagger_1.ApiOperation)({ summary: 'Update user details' }),\n    (0, swagger_1.ApiResponse)({ status: 200, description: 'User updated successfully.' }),\n    __param(0, (0, common_1.Param)('id')),\n    __param(1, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, update_user_dto_1.UpdateUserDto]),\n    __metadata(\"design:returntype\", Promise)\n], UserController.prototype, \"updateUser\", null);\n__decorate([\n    (0, common_1.Delete)(':id'),\n    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),\n    (0, roles_decorator_1.Roles)(user_enum_1.ROLE_TYPE.SUPER_ADMIN),\n    (0, swagger_1.ApiOperation)({ summary: 'Delete a user' }),\n    (0, swagger_1.ApiResponse)({ status: 200, description: 'User deleted successfully.' }),\n    __param(0, (0, common_1.Param)('id')),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], UserController.prototype, \"deleteUser\", null);\n__decorate([\n    (0, common_1.Put)(':id/change-password'),\n    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),\n    (0, roles_decorator_1.Roles)(user_enum_1.ROLE_TYPE.USER),\n    (0, swagger_1.ApiOperation)({ summary: 'Change user password' }),\n    (0, swagger_1.ApiResponse)({ status: 200, description: 'Password changed successfully.' }),\n    __param(0, (0, common_1.Param)('id')),\n    __param(1, (0, common_1.Body)()),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, change_password_dto_1.ChangePasswordDto]),\n    __metadata(\"design:returntype\", Promise)\n], UserController.prototype, \"changePassword\", null);\nexports.UserController = UserController = __decorate([\n    (0, swagger_1.ApiTags)('Users'),\n    (0, common_1.Controller)('users'),\n    (0, swagger_1.ApiBearerAuth)(),\n    __metadata(\"design:paramtypes\", [user_service_1.UserService])\n], UserController);\n//# sourceMappingURL=user.controller.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.module.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.module.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class UserModule {\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.module.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.module.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst user_service_1 = require(\"./user.service\");\nconst user_controller_1 = require(\"./user.controller\");\nconst typeorm_1 = require(\"@nestjs/typeorm\");\nconst entities_1 = require(\"../../entities\");\nlet UserModule = class UserModule {\n};\nexports.UserModule = UserModule;\nexports.UserModule = UserModule = __decorate([\n    (0, common_1.Module)({\n        imports: [typeorm_1.TypeOrmModule.forFeature([entities_1.User])],\n        controllers: [user_controller_1.UserController],\n        providers: [user_service_1.UserService],\n        exports: [user_service_1.UserService],\n    })\n], UserModule);\n//# sourceMappingURL=user.module.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.service.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.service.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from 'src/entities';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nexport declare class UserService {\n    private userRepository;\n    constructor(userRepository: Repository<User>);\n    createUser(createUserDto: CreateUserDto): Promise<User>;\n    updateUser(id: string, updateUserDto: UpdateUserDto): Promise<User>;\n    deleteUser(id: string): Promise<void>;\n    changePassword(id: string, changePasswordDto: ChangePasswordDto): Promise<void>;\n    findOneBy(where: object): Promise<User>;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\api\\user\\user.service.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\api\\user\\user.service.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst typeorm_1 = require(\"@nestjs/typeorm\");\nconst typeorm_2 = require(\"typeorm\");\nconst bcrypt = require(\"bcrypt\");\nconst entities_1 = require(\"../../entities\");\nlet UserService = class UserService {\n    constructor(userRepository) {\n        this.userRepository = userRepository;\n    }\n    async createUser(createUserDto) {\n        const { username, password } = createUserDto;\n        const existingUser = await this.userRepository.findOne({\n            where: { username },\n        });\n        if (existingUser) {\n            throw new common_1.BadRequestException('Username already in use');\n        }\n        const user = this.userRepository.create({\n            ...createUserDto,\n            password,\n        });\n        return this.userRepository.save(user);\n    }\n    async updateUser(id, updateUserDto) {\n        const user = await this.userRepository.findOneBy({ id });\n        if (!user) {\n            throw new common_1.NotFoundException('User not found');\n        }\n        Object.assign(user, updateUserDto);\n        return this.userRepository.save(user);\n    }\n    async deleteUser(id) {\n        const result = await this.userRepository.delete(id);\n        if (result.affected === 0) {\n            throw new common_1.NotFoundException('User not found');\n        }\n    }\n    async changePassword(id, changePasswordDto) {\n        const { oldPassword, newPassword } = changePasswordDto;\n        const user = await this.userRepository.findOneBy({ id });\n        if (!user) {\n            throw new common_1.NotFoundException('User not found');\n        }\n        const passwordMatches = await bcrypt.compare(oldPassword, user.password);\n        if (!passwordMatches) {\n            throw new common_1.BadRequestException('Old password is incorrect');\n        }\n        const hashedNewPassword = await bcrypt.hash(newPassword, 10);\n        user.password = hashedNewPassword;\n        await this.userRepository.save(user);\n    }\n    async findOneBy(where) {\n        return await this.userRepository.findOne({ where });\n    }\n};\nexports.UserService = UserService;\nexports.UserService = UserService = __decorate([\n    (0, common_1.Injectable)(),\n    __param(0, (0, typeorm_1.InjectRepository)(entities_1.User)),\n    __metadata(\"design:paramtypes\", [typeorm_2.Repository])\n], UserService);\n//# sourceMappingURL=user.service.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\app.module.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\app.module.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare class AppModule {\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\app.module.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\app.module.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst typeorm_1 = require(\"@nestjs/typeorm\");\nconst config_1 = require(\"@nestjs/config\");\nconst typeorm_config_1 = require(\"./config/typeorm.config\");\nconst user_module_1 = require(\"./api/user/user.module\");\nconst auth_module_1 = require(\"./api/auth/auth.module\");\nlet AppModule = class AppModule {\n};\nexports.AppModule = AppModule;\nexports.AppModule = AppModule = __decorate([\n    (0, common_1.Module)({\n        imports: [\n            config_1.ConfigModule.forRoot({\n                isGlobal: true,\n            }),\n            typeorm_1.TypeOrmModule.forRootAsync({\n                imports: [config_1.ConfigModule],\n                inject: [config_1.ConfigService],\n                useFactory: (configService) => (0, typeorm_config_1.typeOrmConfig)(configService),\n            }),\n            user_module_1.UserModule,\n            auth_module_1.AuthModule\n        ],\n    })\n], AppModule);\n//# sourceMappingURL=app.module.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\config\\typeorm.config.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\config\\typeorm.config.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions } from '@nestjs/typeorm';\nexport declare const typeOrmConfig: (configService: ConfigService) => TypeOrmModuleOptions;\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\config\\typeorm.config.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\config\\typeorm.config.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeOrmConfig = void 0;\nconst entities_1 = require(\"../entities\");\nconst typeOrmConfig = (configService) => ({\n    type: 'mongodb',\n    url: configService.get('DATABASE_URL'),\n    database: configService.get('DATABASE_NAME'),\n    useUnifiedTopology: true,\n    entities: [...entities_1.entities],\n    synchronize: true,\n});\nexports.typeOrmConfig = typeOrmConfig;\n//# sourceMappingURL=typeorm.config.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\constants\\user.enum.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\constants\\user.enum.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare enum ROLE_TYPE {\n    USER = \"USER\",\n    SUPER_ADMIN = \"SUPER_ADMIN\"\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\constants\\user.enum.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\constants\\user.enum.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ROLE_TYPE = void 0;\nvar ROLE_TYPE;\n(function (ROLE_TYPE) {\n    ROLE_TYPE[\"USER\"] = \"USER\";\n    ROLE_TYPE[\"SUPER_ADMIN\"] = \"SUPER_ADMIN\";\n})(ROLE_TYPE || (exports.ROLE_TYPE = ROLE_TYPE = {}));\n//# sourceMappingURL=user.enum.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\decorators\\roles.decorator.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\decorators\\roles.decorator.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ROLE_TYPE } from 'src/constants/user.enum';\nexport declare const ROLES_KEY = \"roles\";\nexport declare const Roles: (...roles: ROLE_TYPE[]) => import(\"@nestjs/common\").CustomDecorator<string>;\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\decorators\\roles.decorator.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\decorators\\roles.decorator.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Roles = exports.ROLES_KEY = void 0;\nconst common_1 = require(\"@nestjs/common\");\nexports.ROLES_KEY = 'roles';\nconst Roles = (...roles) => (0, common_1.SetMetadata)(exports.ROLES_KEY, roles);\nexports.Roles = Roles;\n//# sourceMappingURL=roles.decorator.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\entities\\index.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\entities\\index.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { User } from './user.entity';\nexport { User, };\nexport declare const entities: (typeof User)[];\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\entities\\index.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\entities\\index.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.entities = exports.User = void 0;\nconst user_entity_1 = require(\"./user.entity\");\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return user_entity_1.User; } });\nexports.entities = [user_entity_1.User];\n//# sourceMappingURL=index.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\entities\\user.entity.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\entities\\user.entity.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ObjectId } from 'mongodb';\nimport { ROLE_TYPE } from 'src/constants/user.enum';\nexport declare class User {\n    _id: ObjectId;\n    firstname: string;\n    lastname?: string;\n    username: string;\n    password: string;\n    type: ROLE_TYPE;\n    get id(): string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\entities\\user.entity.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\entities\\user.entity.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nconst mongodb_1 = require(\"mongodb\");\nconst user_enum_1 = require(\"../constants/user.enum\");\nconst typeorm_1 = require(\"typeorm\");\nlet User = class User {\n    get id() {\n        return this._id.toHexString();\n    }\n};\nexports.User = User;\n__decorate([\n    (0, typeorm_1.ObjectIdColumn)(),\n    __metadata(\"design:type\", mongodb_1.ObjectId)\n], User.prototype, \"_id\", void 0);\n__decorate([\n    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),\n    __metadata(\"design:type\", String)\n], User.prototype, \"firstname\", void 0);\n__decorate([\n    (0, typeorm_1.Column)({ type: 'varchar', length: 255, nullable: true }),\n    __metadata(\"design:type\", String)\n], User.prototype, \"lastname\", void 0);\n__decorate([\n    (0, typeorm_1.Column)({ type: 'varchar', length: 255, unique: true }),\n    __metadata(\"design:type\", String)\n], User.prototype, \"username\", void 0);\n__decorate([\n    (0, typeorm_1.Column)({ type: 'varchar', length: 255 }),\n    __metadata(\"design:type\", String)\n], User.prototype, \"password\", void 0);\n__decorate([\n    (0, typeorm_1.Column)({ type: 'enum', enum: user_enum_1.ROLE_TYPE, default: user_enum_1.ROLE_TYPE.USER }),\n    __metadata(\"design:type\", String)\n], User.prototype, \"type\", void 0);\nexports.User = User = __decorate([\n    (0, typeorm_1.Entity)()\n], User);\n//# sourceMappingURL=user.entity.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\guards\\jwt-auth.guard.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\guards\\jwt-auth.guard.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"declare const JwtAuthGuard_base: import(\"@nestjs/passport\").Type<import(\"@nestjs/passport\").IAuthGuard>;\nexport declare class JwtAuthGuard extends JwtAuthGuard_base {\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\guards\\jwt-auth.guard.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\guards\\jwt-auth.guard.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JwtAuthGuard = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst passport_1 = require(\"@nestjs/passport\");\nlet JwtAuthGuard = class JwtAuthGuard extends (0, passport_1.AuthGuard)('jwt') {\n};\nexports.JwtAuthGuard = JwtAuthGuard;\nexports.JwtAuthGuard = JwtAuthGuard = __decorate([\n    (0, common_1.Injectable)()\n], JwtAuthGuard);\n//# sourceMappingURL=jwt-auth.guard.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\guards\\roles.guard.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\guards\\roles.guard.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nexport declare class RolesGuard implements CanActivate {\n    private reflector;\n    constructor(reflector: Reflector);\n    canActivate(context: ExecutionContext): boolean;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\guards\\roles.guard.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\guards\\roles.guard.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RolesGuard = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst core_1 = require(\"@nestjs/core\");\nconst roles_decorator_1 = require(\"../decorators/roles.decorator\");\nlet RolesGuard = class RolesGuard {\n    constructor(reflector) {\n        this.reflector = reflector;\n    }\n    canActivate(context) {\n        const requiredRoles = this.reflector.getAllAndOverride(roles_decorator_1.ROLES_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (!requiredRoles) {\n            return true;\n        }\n        const { user } = context.switchToHttp().getRequest();\n        if (!requiredRoles.includes(user.role)) {\n            throw new common_1.ForbiddenException('Insufficient permissions');\n        }\n        return true;\n    }\n};\nexports.RolesGuard = RolesGuard;\nexports.RolesGuard = RolesGuard = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [core_1.Reflector])\n], RolesGuard);\n//# sourceMappingURL=roles.guard.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\interfaces\\jwt.interface.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\interfaces\\jwt.interface.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface IJwtPayload {\n    username: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\interfaces\\jwt.interface.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\interfaces\\jwt.interface.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=jwt.interface.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\interfaces\\response.interface.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\interfaces\\response.interface.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface IResponse<T = any> {\n    data: T | T[];\n    message: string;\n    totalRecords?: number;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\interfaces\\response.interface.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\interfaces\\response.interface.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=response.interface.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\main.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\main.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export {};\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\main.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\main.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@nestjs/core\");\nconst app_module_1 = require(\"./app.module\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nconst response_interceptor_1 = require(\"./utils/interceptors/response.interceptor\");\nconst exception_interceptor_1 = require(\"./utils/interceptors/exception.interceptor\");\nasync function bootstrap() {\n    const app = await core_1.NestFactory.create(app_module_1.AppModule);\n    const config = new swagger_1.DocumentBuilder()\n        .setTitle('Sada khata - API Documentation')\n        .setDescription('API description')\n        .setVersion('1.0')\n        .addBearerAuth()\n        .build();\n    const document = swagger_1.SwaggerModule.createDocument(app, config);\n    swagger_1.SwaggerModule.setup('api', app, document);\n    app.useGlobalInterceptors(new response_interceptor_1.ResponseInterceptor());\n    app.useGlobalFilters(new exception_interceptor_1.HttpExceptionFilter());\n    app.enableCors();\n    const port = process.env.PORT || 5000;\n    await app.listen(port);\n    console.info(`Server is running on http://localhost:${port}`);\n}\nbootstrap();\n//# sourceMappingURL=main.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\interceptors\\exception.interceptor.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\interceptors\\exception.interceptor.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ExceptionFilter, ArgumentsHost, HttpException } from '@nestjs/common';\nexport declare class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost): void;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\interceptors\\exception.interceptor.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\interceptors\\exception.interceptor.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpExceptionFilter = void 0;\nconst common_1 = require(\"@nestjs/common\");\nlet HttpExceptionFilter = class HttpExceptionFilter {\n    catch(exception, host) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n        response.status(status).json({\n            succeeded: false,\n            message: exception.message || 'An error occurred',\n            statusCode: status,\n            timestamp: new Date().toISOString(),\n            path: request.url,\n        });\n    }\n};\nexports.HttpExceptionFilter = HttpExceptionFilter;\nexports.HttpExceptionFilter = HttpExceptionFilter = __decorate([\n    (0, common_1.Catch)(common_1.HttpException)\n], HttpExceptionFilter);\n//# sourceMappingURL=exception.interceptor.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\interceptors\\response.interceptor.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\interceptors\\response.interceptor.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nexport interface Response<T> {\n    data: T;\n}\nexport declare class ResponseInterceptor<T> implements NestInterceptor<T, Response<T>> {\n    intercept(context: ExecutionContext, next: CallHandler): Observable<Response<T>>;\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\interceptors\\response.interceptor.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\interceptors\\response.interceptor.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponseInterceptor = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst operators_1 = require(\"rxjs/operators\");\nlet ResponseInterceptor = class ResponseInterceptor {\n    intercept(context, next) {\n        return next.handle().pipe((0, operators_1.map)((value) => {\n            let totalRecords = undefined;\n            if (Array.isArray(value.data) && value.totalRecords) {\n                totalRecords = value?.totalRecords ? value.totalRecords : 0;\n            }\n            return {\n                succeeded: true,\n                totalRecords,\n                statusCode: value?.status && typeof value.status === 'number'\n                    ? value.status\n                    : 201,\n                message: value?.message ? value.message : 'Successful',\n                data: (value?.totalRecords !== null &&\n                    value?.totalRecords !== undefined &&\n                    typeof value?.totalRecords === 'number') ||\n                    value?.data\n                    ? value.data\n                    : value?.message\n                        ? []\n                        : value,\n            };\n        }));\n    }\n};\nexports.ResponseInterceptor = ResponseInterceptor;\nexports.ResponseInterceptor = ResponseInterceptor = __decorate([\n    (0, common_1.Injectable)()\n], ResponseInterceptor);\n//# sourceMappingURL=response.interceptor.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\zpl.d.ts","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\zpl.d.ts","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare function convertImageToZpl(filePath: string, width: number, height: number): Promise<string>;\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\dist\\utils\\zpl.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: \"parserOptions.project\" has been provided for @typescript-eslint/parser.\nThe file was not found in any of the provided project(s): dist\\utils\\zpl.js","nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertImageToZpl = convertImageToZpl;\nconst { Jimp } = require('jimp');\nconst zplImageConvert = require('@replytechnologies/zpl-image-convert');\nasync function convertImageToZpl(filePath, width, height) {\n    try {\n        const image = await Jimp.read('E:\\\\Projects\\\\micro-services\\\\sada-khata\\\\src\\\\utils\\\\logo.png');\n        image.resize(256, 256, Jimp.RESIZE_NEAREST_NEIGHBOR);\n        console.log('image', image);\n        return '';\n    }\n    catch (error) {\n        console.error('Error converting image to ZPL:', error);\n        throw error;\n    }\n}\n//# sourceMappingURL=zpl.js.map","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\auth.controller.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":14,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":14,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'hre' is defined but never used.","line":14,"column":51,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":54},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":14,"column":56,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":14,"endColumn":59,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[468,471],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[468,471],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"unicorn/prevent-abbreviations","severity":2,"message":"The variable `var1` should be named `variable1`. A more descriptive name will do too.","line":16,"column":9,"nodeType":"Identifier","messageId":"replace","endLine":16,"endColumn":13,"fix":{"range":[490,630],"text":"variable1;\r\n    if (register.username === '') {\r\n      variable1 = 'Username is required';\r\n    } else {\r\n      variable1 = ''\r\n    }\r\n    console.log(variable1"}},{"ruleId":"unicorn/prefer-ternary","severity":2,"message":"This `if` statement can be replaced by a ternary expression.","line":17,"column":5,"nodeType":"IfStatement","messageId":"prefer-ternary","endLine":21,"endColumn":6,"fix":{"range":[501,608],"text":"var1 = register.username === '' ? 'Username is required' : '';"}},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":27,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":27,"endColumn":17}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Body, Controller, Post } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { CreateUserDto } from '../user/dto/create-user.dto';\r\nimport { AuthService } from './auth.service';\r\nimport { LoginDto } from './dto/login.dto';\r\n\r\n\r\n@ApiTags('Auth')\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  @Post('sign-up')\r\n  async register(@Body() register: CreateUserDto, hre: any) {\r\n    \r\n    let var1;\r\n    if (register.username === '') {\r\n      var1 = 'Username is required';\r\n    } else {\r\n      var1 = ''\r\n    }\r\n    console.log(var1);\r\n    return this.authService.signUp(register);\r\n  }\r\n\r\n  @Post('login')\r\n  async LoginAPI(@Body() loginDto: LoginDto) {\r\n    return this.authService.login(loginDto);\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\auth.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\auth.service.ts","messages":[{"ruleId":"unicorn/no-null","severity":2,"message":"Use `undefined` instead of `null`.","line":27,"column":14,"nodeType":"Literal","messageId":"error","endLine":27,"endColumn":18,"suggestions":[{"messageId":"remove","fix":{"range":[1015,1019],"text":""},"data":{},"desc":"Remove `null`."},{"messageId":"replace","fix":{"range":[1015,1019],"text":"undefined"},"data":{},"desc":"Replace `null` with `undefined`."}]},{"ruleId":"unicorn/no-null","severity":2,"message":"Use `undefined` instead of `null`.","line":35,"column":14,"nodeType":"Literal","messageId":"error","endLine":35,"endColumn":18,"suggestions":[{"messageId":"remove","fix":{"range":[1224,1228],"text":""},"data":{},"desc":"Remove `null`."},{"messageId":"replace","fix":{"range":[1224,1228],"text":"undefined"},"data":{},"desc":"Replace `null` with `undefined`."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":39,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":39,"endColumn":14},{"ruleId":"camelcase","severity":2,"message":"Identifier 'access_token' is not in camel case.","line":50,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":50,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { User } from 'src/entities';\r\nimport { CreateUserDto } from '../user/dto/create-user.dto';\r\nimport { UserService } from '../user/user.service';\r\nimport { LoginDto } from './dto/login.dto';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private userService: UserService,\r\n    private jwtService: JwtService,\r\n  ) {}\r\n\r\n  async signUp(createUserDto: CreateUserDto): Promise<User> {\r\n    const { password } = createUserDto;\r\n    const salt: string = bcrypt.genSaltSync(10);\r\n    const hashedPassword = bcrypt.hashSync(password, salt);\r\n    return this.userService.createUser({ ...createUserDto, password: hashedPassword });\r\n  }\r\n\r\n  async validateUser(username: string, password: string): Promise<User> {\r\n    const user = await this.userService.findOneBy({ username });\r\n    if (!user) {\r\n      console.log('User not found');\r\n      return null;\r\n    }\r\n    \r\n    const isPasswordValid = bcrypt.compareSync(password, user.password);\r\n    if (isPasswordValid) {\r\n      return user;\r\n    } else {\r\n      console.log('Invalid password');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async login(loginDto: LoginDto) {\r\n    const { username, password } = loginDto;\r\n    const user = await this.validateUser(username, password);\r\n\r\n    if (!user) {\r\n      throw new UnauthorizedException('Invalid credentials');\r\n    }\r\n\r\n    const payload = { username: user.username, sub: user.id };\r\n    return {\r\n      user,\r\n      access_token: await this.jwtService.signAsync(payload, { secret: process.env.JWT_SECRET }),\r\n    };\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\dto\\login.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\dto\\register.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\auth\\jwt-strategy\\jwt.strategy.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":22,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":22,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { UserService } from 'src/api/user/user.service';\r\nimport { IJwtPayload } from 'src/interfaces/jwt.interface';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private userService: UserService,\r\n  ) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: configService.get<string>('JWT_SECRET'),\r\n      passReqToCallback: true\r\n    });\r\n  }\r\n\r\n  async validate(payload: IJwtPayload) {\r\n    const { username } = payload;\r\n    const user = await this.userService.findOneBy({username});\r\n\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    return user; // Attaches the user object to the request\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\dto\\change-password.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\dto\\create-user.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\dto\\update-user.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\user.controller.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":24,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":24,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":33,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":33,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":42,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":42,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":51,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":51,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Controller, Post, Body, Param, Put, Delete, UseGuards } from '@nestjs/common';\r\nimport { UserService } from './user.service';\r\nimport { CreateUserDto } from './dto/create-user.dto';\r\n\r\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\r\nimport { UpdateUserDto } from './dto/update-user.dto';\r\nimport { ChangePasswordDto } from './dto/change-password.dto';\r\nimport { JwtAuthGuard } from 'src/guards/jwt-auth.guard';\r\nimport { RolesGuard } from 'src/guards/roles.guard';\r\nimport { Roles } from 'src/decorators/roles.decorator';\r\nimport { ROLE_TYPE } from 'src/constants/user.enum';\r\n\r\n@ApiTags('Users')\r\n@Controller('users')\r\n@ApiBearerAuth()\r\nexport class UserController {\r\n  constructor(private readonly userService: UserService) {}\r\n\r\n  @Post()\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(ROLE_TYPE.SUPER_ADMIN)\r\n  @ApiOperation({ summary: 'Create a new user' })\r\n  @ApiResponse({ status: 201, description: 'User created successfully.' })\r\n  async createUser(@Body() createUserDto: CreateUserDto) {\r\n    return this.userService.createUser(createUserDto);\r\n  }\r\n\r\n  @Put(':id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(ROLE_TYPE.SUPER_ADMIN, ROLE_TYPE.USER)\r\n  @ApiOperation({ summary: 'Update user details' })\r\n  @ApiResponse({ status: 200, description: 'User updated successfully.' })\r\n  async updateUser(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\r\n    return this.userService.updateUser(id, updateUserDto);\r\n  }\r\n\r\n  @Delete(':id')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(ROLE_TYPE.SUPER_ADMIN)\r\n  @ApiOperation({ summary: 'Delete a user' })\r\n  @ApiResponse({ status: 200, description: 'User deleted successfully.' })\r\n  async deleteUser(@Param('id') id: string) {\r\n    return this.userService.deleteUser(id);\r\n  }\r\n\r\n  @Put(':id/change-password')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(ROLE_TYPE.USER)\r\n  @ApiOperation({ summary: 'Change user password' })\r\n  @ApiResponse({ status: 200, description: 'Password changed successfully.' })\r\n  async changePassword(@Param('id') id: string, @Body() changePasswordDto: ChangePasswordDto) {\r\n    return this.userService.changePassword(id, changePasswordDto);\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\user.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\api\\user\\user.service.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":92,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":92,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\r\n  BadRequestException,\r\n  Injectable,\r\n  NotFoundException,\r\n} from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { CreateUserDto } from './dto/create-user.dto';\r\nimport { UpdateUserDto } from './dto/update-user.dto';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { User } from 'src/entities';\r\nimport { ChangePasswordDto } from './dto/change-password.dto';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    @InjectRepository(User)\r\n    private userRepository: Repository<User>,\r\n  ) {}\r\n\r\n  // Create User\r\n  async createUser(createUserDto: CreateUserDto): Promise<User> {\r\n    const { username, password } = createUserDto;\r\n\r\n    // Check if email is already taken\r\n    // let existingUser = await this.userRepository.findOne({ where: { email } });\r\n    // if (existingUser) {\r\n    //   throw new BadRequestException('Email already in use');\r\n    // }\r\n\r\n    const existingUser = await this.userRepository.findOne({\r\n      where: { username },\r\n    });\r\n    if (existingUser) {\r\n      throw new BadRequestException('Username already in use');\r\n    }\r\n\r\n    // Create and save user\r\n    const user = this.userRepository.create({\r\n      ...createUserDto,\r\n      password,\r\n    });\r\n    return this.userRepository.save(user);\r\n  }\r\n\r\n  // Update User\r\n  async updateUser(id: string, updateUserDto: UpdateUserDto): Promise<User> {\r\n    const user = await this.userRepository.findOneBy({ id });\r\n    if (!user) {\r\n      throw new NotFoundException('User not found');\r\n    }\r\n\r\n    // Update user details\r\n    Object.assign(user, updateUserDto);\r\n\r\n    return this.userRepository.save(user);\r\n  }\r\n\r\n  // Delete User\r\n  async deleteUser(id: string): Promise<void> {\r\n    const result = await this.userRepository.delete(id);\r\n    if (result.affected === 0) {\r\n      throw new NotFoundException('User not found');\r\n    }\r\n  }\r\n\r\n  // Change Password\r\n  async changePassword(\r\n    id: string,\r\n    changePasswordDto: ChangePasswordDto,\r\n  ): Promise<void> {\r\n    const { oldPassword, newPassword } = changePasswordDto;\r\n\r\n    const user = await this.userRepository.findOneBy({ id });\r\n    if (!user) {\r\n      throw new NotFoundException('User not found');\r\n    }\r\n\r\n    // Compare old password\r\n    const passwordMatches = await bcrypt.compare(oldPassword, user.password);\r\n    if (!passwordMatches) {\r\n      throw new BadRequestException('Old password is incorrect');\r\n    }\r\n\r\n    // Hash the new password and save\r\n    const hashedNewPassword = await bcrypt.hash(newPassword, 10);\r\n    user.password = hashedNewPassword;\r\n\r\n    await this.userRepository.save(user);\r\n  }\r\n\r\n  async findOneBy(where: object) {\r\n    return await this.userRepository.findOne({ where });\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\app.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\config\\typeorm.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\constants\\user.enum.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\decorators\\roles.decorator.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":5,"column":46,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":5,"endColumn":48}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SetMetadata } from '@nestjs/common';\r\nimport { ROLE_TYPE } from 'src/constants/user.enum';\r\n\r\nexport const ROLES_KEY = 'roles';\r\nexport const Roles = (...roles: ROLE_TYPE[]) => SetMetadata(ROLES_KEY, roles);\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\entities\\index.ts","messages":[{"ruleId":"unicorn/prefer-export-from","severity":2,"message":"Use `export…from` to re-export `User`.","line":4,"column":5,"nodeType":"ExportSpecifier","messageId":"error","endLine":4,"endColumn":9,"fix":{"range":[41,100],"text":"\r\n\r\nexport const entities = [User];\r\n\nexport {User} from './user.entity';"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { User } from './user.entity';\r\n\r\nexport {\r\n    User,\r\n}\r\n\r\nexport const entities = [User];\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\entities\\user.entity.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\guards\\jwt-auth.guard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\guards\\roles.guard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\interfaces\\jwt.interface.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\interfaces\\response.interface.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":1,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":1,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[31,34],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[31,34],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface IResponse<T = any> {\r\n    data: T | T[];\r\n    message: string;\r\n    totalRecords?: number;\r\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\main.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":7,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":7,"endColumn":25},{"ruleId":"unicorn/prefer-top-level-await","severity":2,"message":"Prefer top-level await over an async function `bootstrap` call.","line":32,"column":1,"nodeType":"CallExpression","messageId":"identifier","endLine":32,"endColumn":12,"suggestions":[{"messageId":"add-await","fix":{"range":[1015,1015],"text":"await "},"data":{"name":"bootstrap"},"desc":"Insert `await`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\r\nimport { ResponseInterceptor } from './utils/interceptors/response.interceptor';\r\nimport { HttpExceptionFilter } from './utils/interceptors/exception.interceptor';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n\r\n  // Swagger configuration\r\n  const config = new DocumentBuilder()\r\n    .setTitle('Sada khata - API Documentation')\r\n    .setDescription('API description')\r\n    .setVersion('1.0')\r\n    .addBearerAuth()\r\n    .build();\r\n\r\n  const document = SwaggerModule.createDocument(app, config);\r\n  SwaggerModule.setup('api', app, document);\r\n\r\n  app.useGlobalInterceptors(new ResponseInterceptor());\r\n  app.useGlobalFilters(new HttpExceptionFilter());\r\n\r\n  app.enableCors();\r\n  \r\n  const port = process.env.PORT || 5000;\r\n  await app.listen(port);\r\n\r\n  console.info(`Server is running on http://localhost:${port}`);\r\n}\r\n\r\nbootstrap();\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\utils\\interceptors\\exception.interceptor.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":11,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":11,"endColumn":8},{"ruleId":"unicorn/prevent-abbreviations","severity":2,"message":"The variable `ctx` should be named `context`. A more descriptive name will do too.","line":12,"column":11,"nodeType":"Identifier","messageId":"replace","endLine":12,"endColumn":14,"fix":{"range":[304,406],"text":"context = host.switchToHttp();\r\n    const response = context.getResponse<Response>();\r\n    const request = context"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import {\r\n  ExceptionFilter,\r\n  Catch,\r\n  ArgumentsHost,\r\n  HttpException,\r\n} from '@nestjs/common';\r\nimport { Request, Response } from 'express';\r\n\r\n@Catch(HttpException)\r\nexport class HttpExceptionFilter implements ExceptionFilter {\r\n  catch(exception: HttpException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const response = ctx.getResponse<Response>();\r\n    const request = ctx.getRequest<Request>();\r\n    const status = exception.getStatus();\r\n\r\n    response.status(status).json({\r\n      succeeded: false,\r\n      message: exception.message || 'An error occurred',\r\n      statusCode: status,\r\n      timestamp: new Date().toISOString(),\r\n      path: request.url,\r\n    });\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Projects\\micro-services\\sada-khata\\src\\utils\\interceptors\\response.interceptor.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":21,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":21,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[482,485],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[482,485],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"unicorn/no-useless-undefined","severity":2,"message":"Do not use useless `undefined`.","line":23,"column":28,"nodeType":"Identifier","messageId":"no-useless-undefined","endLine":23,"endColumn":37,"fix":{"range":[527,539],"text":""}},{"ruleId":"unicorn/prefer-logical-operator-over-ternary","severity":2,"message":"Prefer using a logical operator over a ternary.","line":25,"column":26,"nodeType":"ConditionalExpression","messageId":"prefer-logical-operator-over-ternary/error","endLine":25,"endColumn":70,"suggestions":[{"messageId":"prefer-logical-operator-over-ternary/suggestion","data":{"operator":"??"},"fix":{"range":[631,675],"text":"value?.totalRecords ?? 0"},"desc":"Switch to `??` operator."},{"messageId":"prefer-logical-operator-over-ternary/suggestion","data":{"operator":"||"},"fix":{"range":[631,675],"text":"value?.totalRecords || 0"},"desc":"Switch to `||` operator."}]},{"ruleId":"unicorn/prefer-logical-operator-over-ternary","severity":2,"message":"Prefer using a logical operator over a ternary.","line":35,"column":20,"nodeType":"ConditionalExpression","messageId":"prefer-logical-operator-over-ternary/error","endLine":35,"endColumn":65,"suggestions":[{"messageId":"prefer-logical-operator-over-ternary/suggestion","data":{"operator":"??"},"fix":{"range":[919,964],"text":"value?.message ?? 'Successful'"},"desc":"Switch to `??` operator."},{"messageId":"prefer-logical-operator-over-ternary/suggestion","data":{"operator":"||"},"fix":{"range":[919,964],"text":"value?.message || 'Successful'"},"desc":"Switch to `||` operator."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import {\r\n  CallHandler,\r\n  ExecutionContext,\r\n  Injectable,\r\n  NestInterceptor\r\n} from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface Response<T> {\r\n  data: T;\r\n}\r\n\r\n@Injectable()\r\nexport class ResponseInterceptor<T> implements NestInterceptor<T, Response<T>> {\r\n  intercept(\r\n    context: ExecutionContext,\r\n    next: CallHandler,\r\n  ): Observable<Response<T>> {\r\n    return next.handle().pipe(\r\n      map((value: any) => {\r\n        \r\n        let totalRecords = undefined;\r\n        if (Array.isArray(value.data) && value.totalRecords) {\r\n          totalRecords = value?.totalRecords ? value.totalRecords : 0;\r\n        }\r\n\r\n        return {\r\n          succeeded: true,\r\n          totalRecords,\r\n          statusCode:\r\n            value?.status && typeof value.status === 'number'\r\n              ? value.status\r\n              : 201,\r\n          message: value?.message ? value.message : 'Successful',\r\n          data:\r\n            (value?.totalRecords !== null &&\r\n              value?.totalRecords !== undefined &&\r\n              typeof value?.totalRecords === 'number') ||\r\n            value?.data\r\n              ? value.data\r\n              : value?.message\r\n                ? []\r\n                : value,\r\n        };\r\n      })\r\n    );\r\n  }\r\n}\r\n","usedDeprecatedRules":[]}]